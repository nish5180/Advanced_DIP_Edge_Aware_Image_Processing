function out = remapping_function(I, g, s, alpha, beta)
% I: input image (grayscale, [0,1])
% g: guide value (scalar or image)
% s: detail/edge threshold
% alpha, beta: remapping parameters

    % Pixel-wise difference
    diff = I - g;
    abs_diff = abs(diff);

    % Initialize output
    out = zeros(size(I));

    % Mask for detail vs edge
    is_detail = abs_diff <= s;
    is_edge = ~is_detail;

    % Apply r_d to detail region
    out(is_detail) = r_d(I(is_detail), g, s, alpha);

    % Apply r_e to edge region
    out(is_edge) = r_e(I(is_edge), g, s, beta);
end

% detail remapping function
function out = fd(d,alpha)
    out = d.^alpha;
end

% edge remapping function
function out = fe(a)
    out = beta*a;
end

%both these are according to the paper 
function out = r_d(i, g, s, alpha)
    d = abs(i - g) ./ s;                     % Normalize difference
    fd_val = fd(d, alpha);                  % Apply f_d function
    out = g + sign(i - g) .* s .* fd_val;    % Final remapped value
end


function out = r_e(i, g, s, beta)
    d = abs(i - g);                       % Absolute differ
    fe_val = fe(d - s, beta);            % Apply f_e to the part > s
    out = g + sign(i - g) .* (fe_val + s);  % Add back s , formulated according to the paper 
end


